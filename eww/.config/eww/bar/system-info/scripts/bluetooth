#!/bin/bash

icon_name() {
    status=$(show_status)
    if [ "$status" = "enabled" ]; then
        echo "bluetooth-active-symbolic"
    else
        echo "bluetooth-disabled-symbolic"
    fi
}

show_status() {
    if bluetoothctl show | grep -q "Powered: yes"; then
        echo "enabled"
    else
        echo "disabled"
    fi
}

toggle_status() {
    current_status=$(show_status)
    if [ "$current_status" = "enabled" ]; then
        bluetoothctl power off
        echo "disabled"
    else
        bluetoothctl power on
        echo "enabled"
    fi
}

list_devices() {
    devices=$(bluetoothctl devices)
    json_output="["
    first=true
    
    while IFS= read -r line; do
        if [ "$first" = true ]; then
            first=false
        else
            json_output+=","
        fi
        
        mac=$(echo "$line" | awk '{print $2}')
        name=$(echo "$line" | cut -d' ' -f3-)
        if bluetoothctl info "$mac" | grep -q "Connected: yes"; then
            connected=true
        else
            connected=false
        fi
        
        json_output+="{\"mac\":\"$mac\",\"name\":\"$name\",\"connected\":$connected}"
    done <<< "$devices"
    
    json_output+="]"
    echo "$json_output" | jq '.'
}

toggle_device() {
    mac="$1"
    if bluetoothctl info "$mac" | grep -q "Connected: yes"; then
        bluetoothctl disconnect "$mac"
        echo "disconnected"
    else
        bluetoothctl connect "$mac"
        echo "connected"
    fi
}

get_connected_device_mac() {
    connected_device=$(bluetoothctl info | grep "Device" | awk '{print $2}')
    if [ -n "$connected_device" ]; then
        echo "$connected_device"
    else
        echo "No device connected"
    fi
}

get_battery_percentage() {
    mac="$1"
    if [ -z "$mac" ]; then
        mac=$(get_connected_device_mac)
    fi
    if [ "$mac" != "No device connected" ]; then
        battery_info=$(bluetoothctl info "$mac" | grep "Battery Percentage")
        if [ -n "$battery_info" ]; then
            hex_value=$(echo "$battery_info" | awk '{print $3}')
            # Convert hexadecimal to decimal
            if [[ $hex_value == 0x* ]]; then
                echo $((hex_value))
            else
                echo "$hex_value"
            fi
        else
            echo "Battery information not available"
        fi
    else
        echo "No device connected"
    fi
}

case "$1" in
    status)
        show_status
        ;;
    toggle)
        toggle_status
        ;;
    list)
        list_devices
        ;;
    icon)
        icon_name
        ;;
    connect)
        if [ -z "$2" ]; then
            echo "Error: MAC address required"
            exit 1
        fi
        toggle_device "$2"
        ;;
    connected-device)
        get_connected_device_mac
        ;;
    battery)
        get_battery_percentage "$2"
        ;;
    *)
        echo "Usage: $0 {status|toggle|list|connect MAC|connected-device|battery [MAC]}"
        exit 1
        ;;
esac
